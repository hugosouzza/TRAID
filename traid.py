import streamlit as st
import sqlite3
import hashlib
from PIL import Image

# ----------------------
# CONFIGURACI√ìN
# ----------------------
st.set_page_config(page_title="TRAID", layout="centered")

# ----------------------
# BASE DE DATOS
# ----------------------
def crear_base_datos():
    conn = sqlite3.connect("usuarios.db")
    c = conn.cursor()
    c.execute('''
        CREATE TABLE IF NOT EXISTS usuarios (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nombre TEXT NOT NULL,
            dni TEXT UNIQUE NOT NULL,
            email TEXT UNIQUE NOT NULL,
            usuario TEXT,
            telefono TEXT,
            contrasena TEXT NOT NULL,
            verificado INTEGER DEFAULT 0,
            kyc_completado INTEGER DEFAULT 0,
            riesgo_completado INTEGER DEFAULT 0,
            fecha_registro TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    conn.close()

crear_base_datos()

# ----------------------
# FUNCIONES AUXILIARES
# ----------------------
def encriptar_contrasena(pwd):
    return hashlib.sha256(pwd.encode()).hexdigest()

def verificar_credenciales(usuario_o_email, contrasena):
    conn = sqlite3.connect("usuarios.db")
    c = conn.cursor()
    c.execute("SELECT * FROM usuarios WHERE dni = ? OR email = ?", (usuario_o_email, usuario_o_email))
    user = c.fetchone()
    conn.close()
    if user and user[6] == encriptar_contrasena(contrasena):
        return user
    return None

# ----------------------
# PANTALLAS
# ----------------------

# Pantalla de inicio
def pantalla_inicio():
    image = Image.open("traid_logo.png")  # La imagen de la pantalla de inicio
    st.image(image, use_column_width=True)  # Ajuste para que ocupe el ancho total

    st.markdown("""
        <h1 style='text-align: center; font-size: 30px;'>Bienvenido a <span style='color:#7552F2;'>Traid</span>, te est√°bamos esperando</h1>
        <p style='text-align: center; color: #555; font-size: 16px;'>
        <span style='color:#7552F2;'>Invertir sin saber, ahora es posible.</span><br>
        Bienvenido al futuro de tus finanzas, fuera complicaciones, fuera comisiones.<br>
        Hola a las <span style='color:#7552F2;'>Inversiones sin estr√©s</span>.
        </p>
    """, unsafe_allow_html=True)

    # Bot√≥n "Empecemos a crecer Juntos"
    if st.button("Empecemos a crecer Juntos", key="signup", use_container_width=True):
        st.session_state.pantalla = "registro"  # Este no hace nada a√∫n

    # Espacio
    st.markdown("<div style='margin: 20px;'></div>", unsafe_allow_html=True)

    # Bot√≥n "Iniciar sesi√≥n"
    if st.button("Iniciar sesi√≥n", key="login", use_container_width=True):
        st.session_state.pantalla = "login"  # Va al login

# Pantalla de inicio de sesi√≥n
def pantalla_login():
    # Logo peque√±o encima del Login
    image = Image.open("traid_logo.png")  # Usamos la misma imagen pero m√°s peque√±a
    st.image(image, use_column_width=False, width=150)  # Este es el logo peque√±o que aparece encima del login

    st.markdown("<h2 style='text-align: center;'>Iniciar sesi√≥n</h2>", unsafe_allow_html=True)
    st.write("Accede con tu email o DNI")

    # Campo Email/DNI
    usuario_input = st.text_input("Introduce tu correo o DNI", key="usuario")

    # Campo Contrase√±a
    contrasena_input = st.text_input("Contrase√±a", type="password", key="contrasena")

    # Bot√≥n "Iniciar sesi√≥n"
    if st.button("Iniciar sesi√≥n", key="iniciar_sesion"):
        user = verificar_credenciales(usuario_input, contrasena_input)
        if user:
            st.success(f"Bienvenido, {user[1]} üëã")
            st.session_state.pantalla = "dashboard"
            st.session_state.usuario = user[1]
            st.session_state.email = user[3]
        else:
            st.error("Credenciales incorrectas")

    # Opci√≥n "No nos olvidamos de ti"
    st.checkbox("No nos olvidamos de ti", key="recuerdo")

    # Bot√≥n "Recuperar contrase√±a"
    st.markdown("<p style='text-align: center;'><a href='#' style='color:#7552F2;'>Recuperar Contrase√±a</a></p>", unsafe_allow_html=True)

    # Espacio entre los botones
    st.markdown("<div style='margin: 20px;'></div>", unsafe_allow_html=True)

    # Botones de redes sociales (Google, Facebook, Apple)
    col1, col2, col3 = st.columns(3)
    with col1:
        st.image("google_logo.png", width=50)  # Aseg√∫rate de que estas im√°genes est√©n en el mismo directorio
    with col2:
        st.image("facebook_logo.png", width=50)  # Aseg√∫rate de que estas im√°genes est√©n en el mismo directorio
    with col3:
        st.image("apple_logo.png", width=50)  # Aseg√∫rate de que estas im√°genes est√©n en el mismo directorio

    st.markdown("""
        <div style="text-align: center;">
            <span style="font-size: 12px;">Puedes entrar tambi√©n con</span>
        </div>
    """, unsafe_allow_html=True)

    # Espacio entre los botones
    st.markdown("<div style='margin: 20px;'></div>", unsafe_allow_html=True)

    # Bot√≥n para ir a la pantalla de inicio
    if st.button("‚Üê Volver", key="volver"):
        st.session_state.pantalla = "inicio"

# Pantalla de registro (empezar)
def pantalla_registro():
    st.markdown("<h2 style='text-align: center;'>¬°Creemos tu cuenta!</h2>", unsafe_allow_html=True)
    st.write("Est√°s a un paso de alcanzar tus metas")

    # Campos del formulario de registro
    nombre_completo = st.text_input("Nombre Completo")
    dni = st.text_input("DNI / CIF")
    correo = st.text_input("Correo")
    nombre_usuario = st.text_input("Nombre de Usuario")
    contrasena = st.text_input("Contrase√±a", type="password")
    repetir_contrasena = st.text_input("Repite tu Contrase√±a", type="password")

    if contrasena != repetir_contrasena:
        st.error("Las contrase√±as no coinciden")

    if st.button("Crear cuenta", key="crear_cuenta"):
        if nombre_completo and dni and correo and nombre_usuario and contrasena:
            try:
                # Guardar en base de datos
                conn = sqlite3.connect("usuarios.db")
                c = conn.cursor()
                c.execute('''
                    INSERT INTO usuarios (nombre, dni, email, usuario, contrasena) 
                    VALUES (?, ?, ?, ?, ?)
                ''', (nombre_completo, dni, correo, nombre_usuario, encriptar_contrasena(contrasena)))
                conn.commit()
                conn.close()
                st.success("Cuenta creada correctamente!")
                st.session_state.pantalla = "verificacion_numero"
            except sqlite3.Error as e:
                st.error(f"Error en la base de datos: {e}")
        else:
            st.error("Por favor, completa todos los campos")

# Pantalla de verificaci√≥n de n√∫mero (simulada)
def pantalla_verificacion_numero():
    st.markdown("<h2 style='text-align: center;'>¬°Vamos a verificar que eres t√∫!</h2>", unsafe_allow_html=True)
    st.write("Se enviar√° un c√≥digo de confirmaci√≥n a tu n√∫mero para conectarte con la aplicaci√≥n.")

    # Campo para ingresar n√∫mero
    telefono_input = st.text_input("Introduce tu n√∫mero de tel√©fono", placeholder="+34 123 000 111 222", key="telefono")

    # Bot√≥n de continuar
    if st.button("Continuar", key="continuar_verificacion"):
        # Simulaci√≥n del paso de verificaci√≥n
        st.session_state.pantalla = "verificacion_codigo"  # Avanzar a la siguiente pantalla

# Pantalla de verificaci√≥n del c√≥digo de 4 d√≠gitos
def pantalla_verificacion_codigo():
    st.markdown("<h2 style='text-align: center;'>Introduce el c√≥digo de 4 d√≠gitos que le hemos enviado</h2>", unsafe_allow_html=True)
    st.write("C√≥digo enviado a tu n√∫mero: +34 123 000 111 222")

    # Campos para los 4 d√≠gitos
    codigo_input = [st.text_input(f"Digite el n√∫mero {i+1}", max_chars=1, key=f"codigo_{i}") for i in range(4)]

    # Bot√≥n para completar la verificaci√≥n
    if st.button("Unite y toma el control de tus finanzas", key="finalizar_verificacion"):
        # Avanzar a la pantalla Sofia (pantalla de continuaci√≥n)
        st.session_state.pantalla = "sofia"

# Pantalla de Sofia
def pantalla_sofia():
    st.title("¬°Bienvenido a Sofia!")
    st.write("Esta es la siguiente pantalla despu√©s de la verificaci√≥n de tu n√∫mero. Aqu√≠ ir√°n m√°s detalles m√°s adelante.")

# ----------------------
# MAIN
# ----------------------
def main():
    if "pantalla" not in st.session_state:
        st.session_state.pantalla = "inicio"

    if st.session_state.pantalla == "inicio":
        pantalla_inicio()
    elif st.session_state.pantalla == "login":
        pantalla_login()
    elif st.session_state.pantalla == "dashboard":
        dashboard()
    elif st.session_state.pantalla == "registro":
        pantalla_registro()
    elif st.session_state.pantalla == "verificacion_numero":
        pantalla_verificacion_numero()
    elif st.session_state.pantalla == "verificacion_codigo":
        pantalla_verificacion_codigo()
    elif st.session_state.pantalla == "sofia":
        pantalla_sofia()

if __name__ == '__main__':
    main()
